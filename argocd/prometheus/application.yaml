apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: monitoring
  namespace: argocd
spec:
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - ServerSideApply=true
      - CreateNamespace=true
      - PruneLast=true
  project: default
  sources:
    - chart: kube-prometheus-stack
      repoURL: https://prometheus-community.github.io/helm-charts
      targetRevision: 72.3.0
      helm:
        values: |
          prometheusOperator:
            admissionWebhooks:
              enabled: true
              annotations:
                argocd.argoproj.io/hook: PreSync
                argocd.argoproj.io/hook-delete-policy: HookSucceeded
              patch:
                annotations:
                  argocd.argoproj.io/hook: PreSync
                  argocd.argoproj.io/hook-delete-policy: HookSucceeded
              mutatingWebhookConfiguration:
                annotations:
                  argocd.argoproj.io/hook: PreSync
              validatingWebhookConfiguration:
                annotations:
                  argocd.argoproj.io/hook: PreSync

          grafana:
            enabled: true
            ingress:
              enabled: false 
            
            adminUser: admin
            adminPassword: prom-operator


            sidecar:
              datasources:
                enabled: true
                defaultDatasourceEnabled: false

            additionalDataSources:
              - name: Prometheus
                type: prometheus
                uid: prometheus
                url: https://prometheus.lab.member87.xyz
                access: proxy
                isDefault: true
                jsonData:
                  httpMethod: POST
                  timeInterval: 30s
                  exemplarTraceIdDestinations:
                    - name: traceID
                      datasourceUid: tempo

            grafana.ini:
              auth:
                disable_login_form: false
              auth.anonymous:
                enabled: true
           
          prometheus:
            ingress:
              enabled: false 
            prometheusSpec:
              externalUrl: "https://prometheus.lab.member87.xyz"

          alertmanager:
            enabled: false
            ingress:
              enabled: false 

  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
---
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: monitoring-lab-member87-xyz
  namespace: monitoring
spec:
  secretName: monitoring-certificate-secret
  issuerRef:
    name: cloudflare-cluster-issuer
    kind: ClusterIssuer
  dnsNames:
    - prometheus.lab.member87.xyz
    - grafana.lab.member87.xyz
    - alertmanager.lab.member87.xyz
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: monitoring-prometheus
  namespace: monitoring
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`prometheus.lab.member87.xyz`)
      kind: Rule
      services:
        - name: monitoring-kube-prometheus-prometheus
          port: 9090
  tls:
    secretName: monitoring-certificate-secret
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: monitoring-grafana
  namespace: monitoring
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`grafana.lab.member87.xyz`)
      kind: Rule
      services:
        - name: monitoring-grafana
          port: 80
  tls:
    secretName: monitoring-certificate-secret

